{"version":3,"file":"kick.js","sourceRoot":"./src/","sources":["commands/kick.ts"],"names":[],"mappings":"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","sourcesContent":["import { Client, CommandInteraction, Guild, GuildMember, User } from 'discord.js';\nimport { Command } from 'src/@types/Util.js';\nimport { checkPermission, higherRole } from '../utils.js';\n\nexport const name: Command['name'] = 'kick';\n\nexport const hidden: Command['hidden'] = true;\n\nexport const create: Command['create'] = {\n    name: 'kick',\n    description: 'Kicks a user! | Requires [KICK_MEMBERS]',\n    options: [\n        {\n            name: 'user',\n            description: 'The user who should be kicked',\n            type: 'USER',\n            required: true\n        },\n        {\n            name: 'reason',\n            description: 'The reason for the kick',\n            type: 'STRING'\n        },\n        {\n            name: 'deleteMessages',\n            description: 'If the messages of this user should be deleted',\n            type: 'BOOLEAN'\n        }\n    ]\n};\n\nexport const execute = async (client: Client, interaction: CommandInteraction): Promise<void> => {\n\n    const guild = client.guilds.cache.get(interaction.guildID as string) as Guild;\n\n    // Grab important informations\n    const executor: GuildMember = interaction.member as GuildMember;\n    const target: GuildMember = interaction.options.find(o => o.name == 'user')?.member as GuildMember;\n    const targetUser: User = target.user;\n\n    let reason = '';\n    if (interaction.options.find(o => o.name.toLowerCase() == 'reason')) {\n        reason = interaction.options.find(o => o.name.toLowerCase() == 'reason')?.value as string;\n    }\n    let purge = false;\n    if (interaction.options.find(o => o.name.toLowerCase() == 'deletemessages')) {\n        purge = interaction.options.find(o => o.name.toLowerCase() == 'deletemessages')?.value as boolean;\n    }\n\n    // Check if permissions are valid\n    if (!checkPermission(executor, 'BAN_MEMBERS')) return (interaction.editReply('You do not have the required permissions to kick a member.') as unknown) as void;\n    if (!higherRole(executor.roles.highest, target.roles.highest)) return (interaction.editReply('You do not have the required permissions to kick this member.') as unknown) as void;\n\n    // Check if messages should be purged\n    if (purge) {\n        const banned: GuildMember | null = await target.ban({ days: 7, reason: reason}).catch(() => null);\n        if (banned) {\n            // Success\n            guild.members.unban(targetUser);\n            return (interaction.editReply('Member successfully kicked!') as unknown) as void;\n        } else {\n            // No success\n            return (interaction.editReply('Something went wrong!') as unknown) as void;\n        }\n    } else {\n        const kicked: GuildMember | null = await target.kick(reason).catch(() => null);\n        if (kicked) {\n            // Success\n            return (interaction.editReply('Member successfully kicked!') as unknown) as void;\n        } else {\n            // No Success\n            return (interaction.editReply('Something went wrong!') as unknown) as void;\n        }\n    }\n};"]}