{"version":3,"file":"image.js","sourceRoot":"./src/","sources":["commands/image.ts"],"names":[],"mappings":"AAAA,OAAO,EAA8B,YAAY,EAAE,MAAM,YAAY,CAAC;AAGtE,OAAO,QAAQ,MAAM,eAAe,CAAC;AACrC,OAAO,GAAG,MAAM,kBAAkB,CAAC;AAEnC,MAAM,CAAC,MAAM,IAAI,GAAoB,OAAO,CAAC;AAE7C,MAAM,CAAC,MAAM,MAAM,GAAsB;IACrC,IAAI,EAAE,OAAO;IACb,WAAW,EAAE,iDAAiD;IAC9D,OAAO,EAAE;QACL;YACI,IAAI,EAAE,UAAU;YAChB,WAAW,EAAE,oBAAoB;YACjC,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE;gBACL;oBACI,IAAI,EAAE,KAAK;oBACX,KAAK,EAAE,KAAK;iBACf;gBACD;oBACI,IAAI,EAAE,KAAK;oBACX,KAAK,EAAE,KAAK;iBACf;gBACD;oBACI,IAAI,EAAE,MAAM;oBACZ,KAAK,EAAE,MAAM;iBAChB;gBACD;oBACI,IAAI,EAAE,MAAM;oBACZ,KAAK,EAAE,MAAM;iBAChB;aACJ;SACJ;KACJ;CACJ,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAuB,KAAK,EAAE,MAAc,EAAE,WAA+B,EAAiB,EAAE;IAChH,MAAM,QAAQ,GAAW,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAe,CAAC;IAChE,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,IAAI,GAAG,EAAE,CAAC;IAEd,QAAQ,QAAQ,EAAE;QACd,KAAK,KAAK,CAAC,CAAC;YACR,KAAK,GAAG,MAAM,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,KAAK,EAAE;gBAC5C,KAAK,GAAG,MAAM,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;aACjC;YAED,IAAI,GAAG,CAAC,MAAM,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACzC,MAAM;SACT;QACD,KAAK,KAAK,CAAC,CAAC;YACR,KAAK,GAAG,MAAM,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,KAAK,EAAE;gBAC5C,KAAK,GAAG,MAAM,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;aACjC;YACD,MAAM;SACT;QACD,KAAK,MAAM,CAAC,CAAC;YACT,KAAK,GAAG,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAC/B,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,KAAK,EAAE;gBAC5C,KAAK,GAAG,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;aAClC;YACD,MAAM;SACT;QACD,KAAK,MAAM,CAAC,CAAC;YACT,KAAK,GAAG,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAC/B,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,KAAK,EAAE;gBAC5C,KAAK,GAAG,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;aAClC;YACD,MAAM;SACT;KACJ;IAED,MAAM,KAAK,GAAG,IAAI,YAAY,EAAE;SAC3B,cAAc,CAAC,IAAI,CAAC;SACpB,QAAQ,CAAC,KAAK,CAAC,CAAC;IAErB,MAAM,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACvC,CAAC,CAAC","sourcesContent":["import { Client, CommandInteraction, MessageEmbed } from 'discord.js';\nimport { Command } from 'src/@types/Util.js';\n\nimport catFacts from 'get-cat-facts';\nimport api from 'random-stuff-api';\n\nexport const name: Command['name'] = 'image';\n\nexport const create: Command['create'] = {\n    name: 'image',\n    description: 'Show a random picture from a specific category!',\n    options: [\n        {\n            name: 'category',\n            description: 'Choose a cetegory!',\n            type: 'STRING',\n            required: true,\n            choices: [\n                {\n                    name: 'Cat',\n                    value: 'cat'\n                },\n                {\n                    name: 'Dog',\n                    value: 'dog'\n                },\n                {\n                    name: 'Duck',\n                    value: 'duck'\n                },\n                {\n                    name: 'Vase',\n                    value: 'vase'\n                }\n            ]\n        }\n    ]\n};\n\nexport const execute: Command['execute'] = async (client: Client, interaction: CommandInteraction): Promise<void> => {\n    const category: string = interaction.options[0].value as string;\n    let image = '';\n    let fact = '';\n\n    switch (category) {\n        case 'cat': {\n            image = await api.image.cat();\n            while (image.substr(image.length - 3) == 'mp4') {\n                image = await api.image.cat();\n            }\n\n            fact = (await catFacts.random())[0].text;\n            break;\n        }\n        case 'dog': {\n            image = await api.image.dog();\n            while (image.substr(image.length - 3) == 'mp4') {\n                image = await api.image.dog();\n            }\n            break;\n        }\n        case 'duck': {\n            image = await api.image.duck();\n            while (image.substr(image.length - 3) == 'mp4') {\n                image = await api.image.duck();\n            }\n            break;\n        }\n        case 'vase': {\n            image = await api.image.vase();\n            while (image.substr(image.length - 3) == 'mp4') {\n                image = await api.image.vase();\n            }\n            break;\n        }\n    }\n\n    const embed = new MessageEmbed()\n        .setDescription(fact)\n        .setImage(image);\n\n    await interaction.editReply(embed);\n};"]}